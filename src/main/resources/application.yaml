server:
  port: ${BACKEND_SERVER_PORT}

spring:
  application:
    name: nikke-hub-backend

  datasource:
    driverClassName: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    generate-ddl: ${SPRING_JPA_GENERATE_DDL}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
        transaction:
          coordinator_class: jdbc
    sql:
      init:
        mode: never

  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED}
    baseline-on-migrate: ${SPRING_FLYWAY_BASELINE_ON_MIGRATE}
    baseline-version: ${SPRING_FLYWAY_BASELINE_VERSION}
    user: ${SPRING_FLYWAY_USER}
    password: ${SPRING_FLYWAY_PASSWORD}

  cache:
    type: redis
  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}

management:
  endpoints:
    web:
      exposure:
        include: health
  health:
    probes:
      enabled: true

eureka:
  instance:
    preferIpAddress: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS}
    instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY}
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE}